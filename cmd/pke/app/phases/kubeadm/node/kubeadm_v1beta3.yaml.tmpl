apiVersion: kubeadm.k8s.io/v1beta3
kind: JoinConfiguration
{{ if and .APIServerAdvertiseAddress .APIServerBindPort }}
controlPlane:
  localAPIEndpoint:
    advertiseAddress: "{{ .APIServerAdvertiseAddress }}"
    bindPort: {{ .APIServerBindPort }}{{end}}
nodeRegistration:
  criSocket: "{{ .CRISocket }}"
  taints:{{ if not .Taints }} []{{end}}{{range .Taints}}
    - key: "{{.Key}}"
      value: "{{.Value}}"
      effect: "{{.Effect}}"{{end}}
  kubeletExtraArgs:
    {{ if .NodeLabels }}node-labels: "{{ .NodeLabels }}"{{end}}
    {{ if .CloudProvider }}cloud-provider: "{{ .CloudProvider }}"{{end}}
    {{if eq .CloudProvider "azure" }}cloud-config: "/etc/kubernetes/{{ .CloudProvider }}.conf"{{end}}
    read-only-port: "0"
    anonymous-auth: "false"
    streaming-connection-idle-timeout: "5m"
    event-qps: "0"
    client-ca-file: "/etc/kubernetes/pki/ca.crt"
    feature-gates: "RotateKubeletServerCertificate=true"
    rotate-certificates: "true"
    tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    authorization-mode: "Webhook"
    experimental-kernel-memcg-notification: "true"
discovery:
  bootstrapToken:
    apiServerEndpoint: "{{ .ControlPlaneEndpoint }}"
    token: {{ .Token }}
    caCertHashes:
      - {{ .CACertHash }}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
serverTLSBootstrap: true
systemReserved:
  cpu: 50m
  memory: 50Mi
  ephemeral-storage: 1Gi
kubeReserved:
  cpu: {{ .KubeReservedCPU }}
  memory: {{ .KubeReservedMemory }}
  ephemeral-storage: 1Gi
evictionHard:
  imagefs.available: 15%
  memory.available: 100Mi
  nodefs.available: 10%
  nodefs.inodesFree: 5%
protectKernelDefaults: true
